# Generated by Django 2.0.4 on 2019-04-28 17:01

import datetime
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='BaseClass',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='班级')),
                ('code', models.CharField(default='', max_length=255, verbose_name='代号')),
                ('create_year', models.CharField(max_length=255, verbose_name='创建年')),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='BaseCourse',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='课程')),
                ('code', models.CharField(default='', max_length=255, verbose_name='代号')),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='BaseGrade',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='年级')),
                ('semester', models.CharField(choices=[('1', '第一学期'), ('2', '第二学期')], max_length=255, verbose_name='学期(一, 二)')),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='BaseSchool',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='学校名称')),
                ('code', models.CharField(default='', max_length=255, verbose_name='代号')),
                ('short_name', models.CharField(default='', max_length=255, verbose_name='简称')),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ClassCourseMap',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_use_now', models.BooleanField(default=True, verbose_name='是否为班级正在上的课程')),
                ('create_time', models.DateTimeField(default=datetime.datetime.now)),
                ('is_active', models.BooleanField(default=True)),
                ('base_class', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='class_courses', to='school.BaseClass', verbose_name='所属班级')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='school.BaseCourse', verbose_name='所选课程')),
                ('grade_info', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='school.BaseGrade', verbose_name='当前年级')),
            ],
            options={
                'ordering': ['-create_time'],
            },
        ),
        migrations.CreateModel(
            name='Examination',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='考试名称')),
                ('test_type', models.CharField(choices=[('m', '期中'), ('e', '期末'), ('a', '补考'), ('r', '重修考试'), ('s', '小测试'), ('g', '年级统考'), ('o', '其他')], max_length=255, verbose_name='考试类型')),
                ('test_date', models.DateField(blank=True, null=True, verbose_name='考试时间')),
                ('create_time', models.DateTimeField(default=datetime.datetime.now)),
                ('is_active', models.BooleanField(default=True)),
                ('course_map', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='school.ClassCourseMap', verbose_name='考试')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Material',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='教材名')),
                ('code', models.CharField(default='', max_length=255, verbose_name='代号')),
                ('credits', models.CharField(max_length=255, verbose_name='教材学分')),
                ('is_active', models.BooleanField(default=True)),
                ('course_info', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='school.BaseCourse', verbose_name='所属课程')),
                ('grade', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='school.BaseGrade', verbose_name='适用年级')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ScoreRecord',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_score_tag', models.CharField(default='100', max_length=255, verbose_name='满分')),
                ('score', models.CharField(default='', max_length=255, verbose_name='分数')),
                ('score_level', models.CharField(choices=[('A', 'A'), ('B', 'B'), ('C', 'C'), ('D', 'D')], max_length=255, verbose_name='得分等级')),
                ('grade_point', models.CharField(default='', max_length=255, verbose_name='获得绩点')),
                ('credits', models.CharField(default='', max_length=255, verbose_name='本次获得学分绩点')),
                ('is_joined', models.BooleanField(default=True, verbose_name='是否参加考试')),
                ('is_passed', models.BooleanField(default=True, verbose_name='是否通过考试')),
                ('create_time', models.DateTimeField(default=datetime.datetime.now)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'ordering': ['-score'],
            },
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='学生名称')),
                ('code', models.CharField(default='', max_length=255, verbose_name='代号')),
                ('base_class', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='class_students', to='school.BaseClass', verbose_name='所在班级')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Teacher',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='老师')),
                ('code', models.CharField(default='', max_length=255, verbose_name='代号')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.AddField(
            model_name='scorerecord',
            name='create_teacher',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='school.Teacher'),
        ),
        migrations.AddField(
            model_name='scorerecord',
            name='examination',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='examination_records', to='school.Examination', verbose_name='考试名称'),
        ),
        migrations.AddField(
            model_name='scorerecord',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='student_test_records', to='school.Student', verbose_name='考试学生'),
        ),
        migrations.AddField(
            model_name='examination',
            name='invigilator',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='school.Teacher', verbose_name='监考老师'),
        ),
        migrations.AddField(
            model_name='classcoursemap',
            name='material',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='school.Material', verbose_name='所选教材'),
        ),
        migrations.AddField(
            model_name='classcoursemap',
            name='teacher',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='school.Teacher', verbose_name='任课老师'),
        ),
        migrations.AlterUniqueTogether(
            name='basegrade',
            unique_together={('name', 'semester')},
        ),
        migrations.AddField(
            model_name='baseclass',
            name='head_teacher',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='head_teacher_class', to='school.Teacher', verbose_name='班主任'),
        ),
        migrations.AddField(
            model_name='baseclass',
            name='school',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='school_classes', to='school.BaseSchool', verbose_name='所在学校'),
        ),
    ]
