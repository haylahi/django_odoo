# Generated by Django 2.0.4 on 2019-04-24 22:29

import datetime
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='BaseUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(max_length=255, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('email', models.CharField(default='', max_length=255, verbose_name='email')),
                ('is_staff', models.BooleanField(default=True, verbose_name='staff')),
                ('create_time', models.DateTimeField(default=datetime.datetime.now, verbose_name='创建时间')),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'db_table': 'base_user',
                'ordering': ['-create_time'],
            },
        ),
        migrations.CreateModel(
            name='BaseCity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='城市')),
                ('area_code', models.CharField(max_length=255, verbose_name='城市区号')),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'db_table': 'base_city',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='BaseUnit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='单位')),
                ('unit_symbol', models.CharField(max_length=255, verbose_name='单位符号')),
                ('unit_type', models.CharField(choices=[('UNIT', '数量单位'), ('TIME', '时间'), ('LENGTH', '长度'), ('WEIGHT', '重量')], default='UNIT', max_length=255, verbose_name='单位类型')),
                ('is_active', models.BooleanField(default=True)),
                ('is_base_unit', models.BooleanField(default=False, verbose_name='是否为基本单位')),
                ('rounding', models.CharField(default='0.00', max_length=255, verbose_name='精度')),
                ('factor', models.CharField(default='1', max_length=255, verbose_name='倍数')),
                ('compute_method', models.CharField(choices=[('std', '相等'), ('multi', '乘'), ('divide', '除')], default='std', max_length=255, verbose_name='计算方式')),
            ],
            options={
                'db_table': 'base_unit',
                'ordering': ['unit_type', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Company')),
                ('code', models.CharField(default='', max_length=255, verbose_name='Code')),
                ('description', models.CharField(default='', max_length=255, verbose_name='描述')),
                ('website', models.CharField(default='', max_length=255, verbose_name='公司网址')),
                ('email', models.CharField(default='', max_length=255, verbose_name='公司邮箱')),
                ('address', models.CharField(default='', max_length=255, verbose_name='详细地址')),
                ('create_time', models.DateTimeField(default=datetime.datetime.now, verbose_name='创建时间')),
                ('is_active', models.BooleanField(default=True)),
                ('city', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='base.BaseCity', verbose_name='城市')),
            ],
            options={
                'db_table': 'base_company',
                'ordering': ['name', '-create_time'],
            },
        ),
        migrations.CreateModel(
            name='Province',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='省')),
                ('short_name', models.CharField(max_length=255, verbose_name='简称')),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'db_table': 'base_province',
                'ordering': ['name'],
            },
        ),
        migrations.AddField(
            model_name='company',
            name='province',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='base.Province', verbose_name='省份'),
        ),
        migrations.AlterUniqueTogether(
            name='baseunit',
            unique_together={('unit_type', 'is_base_unit')},
        ),
        migrations.AddField(
            model_name='basecity',
            name='province',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cities', to='base.Province', verbose_name='所在省份'),
        ),
        migrations.AddField(
            model_name='baseuser',
            name='company',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='base.Company', verbose_name='所属公司'),
        ),
        migrations.AddField(
            model_name='baseuser',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='baseuser',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
    ]
